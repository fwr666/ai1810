round(数字,近似的位数)
pow(x,y,z=None)  x**y%z

help(对象/类型/字符串)

基本输入输出函数
  input('提示字符串')
  print(values,...,sep='',end='\n',flush=False)

  用一用才能会...

　键盘敲烂月薪过万

day03笔记：
　　字符串　str
     作用:
       用来记录文字(文本)信息
     字符串的表示方式:
        在非注释当中凡是用引号括起来的部分都是字符串
    '      单引号
    "　　　　双引号
    '''     三单引号
    """     三双引号

    空字符串的字面值表示方法
      ''
      ""
      ''''''
      """"""
      注：空字符串的布尔测试值bool(x)为False

      非空字符串:
        'hello'
        "hello"
      '''hello'''
      """hello"""
单引号和双引号的区别：
　　单引号内的双引号不算结束符
　　双引号内的单引号算字符

print("i'm a student")
i'm a student

print('''i'm a teacher .i'm "6666"''')

三引号字符串
　　以"""或'''开头和结尾的字符串
 作用：
 　　三引号内可以包含单引号和双引号
    三引号字符串中的换行会自动转换为换行符'\n'

    示例见:
      str.py


隐式字符串的拼接
　　多个字符串字面值连在一起时，python解释执行器会自动
拼接为一个字符串。
 s=""i'm a teacher!""  'my name is 55'
 print(s)　#拼接后的字符串
  
用转义序列代表特殊字符
  字符串的字面值当中用字符反斜杠(\)后跟一个或一些字符代表特殊的一个字符

  转义格式　　　　　　含义0000000000
  \'               单引号(')
  \"               双引号(")
  \\               一个反斜杠(\)
  \n                 换行符
  \r                返回光标到行首
  \f                换页                      控制打印机
  \t                水平制表符
  \v                垂直制表符
  \b                倒退
  \a                响铃
  \0                空字符(字符值为零)
  \0oo              oo为两位八进制表示的字符
  \xXX              XX为两位十六进制表示的字符
  \xXXXX            XXXX为四位十六进制表示的UNICODE16字符
  \UXXXXXXXX             XXXX为八位十六进制表示的UNICODE32字符

所有的文字是图片　　把所有的图片进行编号
ASCII编码表
   查看方式;
     man ascii字符串里存的是整数值

常用ascii 码

字符　十进制　　十六进制
'0'   48      0x30
'a'   65      0x41
'A'    97     0x61
python3 默认unicode


序列概念
 字符串是序列
 序列是指有先后顺序的排列
 
 求序列的长度的函数len
  len(s)　返回字符串的长度

练习:
  得到如下字符串有几个字符
  1) 'abcd1234'
  2) '5\'4"'
  3 '\"\x34\056'
  4. '\a\b\c\d'
  5  '\n\t\r\\'

  raw 字符串(原始字符串)
  格式:
    r'字符串内容'
    r"字符串内容"
    r'''字符串内容'''
    r"""字符串内容"""
  作用：
  　　让转义符号\无效
  示例：
  　　用字符串形成windows下的路径
     c:\newfile\test.py

     path =  r'c:\newfile\test.py'
     print(path)

字符串的运算：
   + += * *=
　　+ 加号运算符用于拼接字符串
   x = 'abcd'
   y = '1234'
   z = x + y #拼接
   print(z)
   a = y + x
   print(a)

   += 运算符　用原字符串与右侧的字符串拼接生成新的字符串，
   　　　　　　再用原变量绑定新的字符串
  如：
  　x = 'abcd'
    x += '123'
    print(x)   'abcd123'

* 运算符　生成重复的字符串
　　如：　
　　　x = "ABCD"*3
   print(x)  #ABCDABCDABCD

   *=  运算符　　生成重复的字符串，再用变量重新绑定
     x = '123'
     x *=3     #等同于 x = x * 3
     print(x)  #123123123 


    字符串的比较运算
      运算符:
        <  <=  >   >=   ==  !=
    规则：
    　　一次按编码值进行两两比较，一旦不同，则比较结束，返回
    比较结果，当编码的长度完全相同时，两个字符串相等
    示例：
    　'A'<'B' #True
      'ABC'>'ABB' #True
      'ADC' < 'ABC' #False
      'ABC' >= '123'
      'AD' >= 'ABC' #True
      'ABC' < 'abc'#True
      'abcd' != 'dcba'#True

     in/not in 运算符
     　作用：
     　　　in 用于序列,字典，集合中，用于判断某个值是否在容器中
    如果存在则返回True 否则返回False
       not in 与in 的效果相反
       格式：
       　对象 in 序列
       示例：
       　　x = 'welcome to beijin'
          'to' in x # True
          'hello' in x # False
          'b' in x # True
        必须为连续的
         
is not 
not in 
 字符串的索引操作:
   索引　index
     python 字符串是不可以改变的序列

     语法：
     　字符串[整数表达式]
     说明:
       python 序列都可以用索引(index)访问序列中的元素
       python 序列的正向索引是从0开始的,第二个索引为1...
       　　　　　最后一个索引为len(s)-1
       python 序列的反向索引是从-1开始的,-1代表倒数第一个,第一个
       是-len(s)
示例：
　s = 'abcde'
s[-1]---->e
s[2]----->c

索引不能超范围;
  不然会出错
  

  切片　slice
    作用：
    　　从字符串序列中取出相应的元素重新组成一个字符串序列
    语法：
    　　s[(开始索引b):(结束索引e):(:(步长))]
    注：
    　开始　索引是切片开始切下的位置，０代表第一个元素，与索引相同
    结束索引是切片的终止索引（不包含终止点）
    步长是切片每次获取完当前元素后移动的方向和偏移量
    １）没有步长，相当于步长为１（默认值为１）
    ２）当步长为正整数时，取正向切片：
    　　　开始索引默认为０，结束索引是最后一个元素的下一个位置
    ３)当步长为负整数时，取正向切片：
    　　反向切片时：默认的起始位置为最后一个，终止位置为第一个元素的前一个位置
     
示例：
　s = "ABCDE"
 a = s
 
 练习：
 　１．写一个程序，输入一个字符串，把字符串的第一个字符和最后一个字符去掉
 后，打印出处理后的字符串
 字符串序列相关的函数：
 　　len(x):返回字符串的长度
 　　　max)(x) :返回序列中最大元素
 　　　min (x) :返回序列中最小的元素
  字符串编码转换函数:
    ord(c)　返回一个字符c d UNIcode 编码值 ord(x )ord[ap
    v = ''clite]
    chr（i） 返回ｉ这个相对应的字符

整数转为字符串的函数
  bin(i)  将整数转为二进制的字符串
  otc(i)  将整数转为八进制的字符串
  hex(i)  将整数转为十六进制的字符串

  字符串的构造函数str
  str(obj='')　将对象转为字符串
  
python3 中常用的字符串方法
  方法调用函数:
    对象.方法名(方法传参)
  示例：
  　'abc'.isalpha()  #正确
  123.isalpha() #报错
  字符串的常用方法文档 
    python_base_docs_html/str.html


  练习：
  　１．用字符串*运算符打印三角形
  　　　要求输入一个数，此整数代表三角形
  　　　离左侧的字符个数
  　　如：　　
  　　　　请输入左侧的空格数：３
   *
  ***
 *****
*******

2.输入一个字符串，把输入的字符串中的空格全部去掉，
　　打印处理之后的字符串的内容

３．输入三行文字，让这三行文字在一个方框内居中显示
　　如（请不要输入中文）：
　请输入第一行：hello!
  请输入第二行:i'm studing python!
  请输入第三行:i like python

  




     　






































