列表容器
　　可以存储任意数据的容器
　　可变的序列（不改变原来ｉｄ的情况下）
列表的创建：
　　字面值的创建方式：
　　[],[1,2,3,4,5]  [1,2,3,4,5[12,3,[2,3,4]]]
　构造函数的创建方式：
　　list()
    list("ABCD")
    list(range(1,10)
    list([1,2,3,4])

列表的运算：
　　+  +=   *  *=

列表　+= 可迭代对象(实现追加可迭代对象内的数据)
列表的比较运算
   依次比较：
in / not in 运算符

列表的索引操作：
　　[]
  index  
索引的语法：
　　列表[整数表达式]
用法：
　　同字符串
　　索引分为正向索引和反向索引，规则与字符串的规则完全相同
 示例：
 　　L = [1,2,3,4]
   print(L[1]) #2
   print(L[-1]) #5


   del 用于删除列表中的元素
   　　　语法：
   　　　　del 列表[索引]
          del 列表[切片]
    L = [1,21,12,4,31,100]
    del L[1]
    del L[2]
    print(L)
    说明：列表中的元素被删除,后续元素d 索引值会变小,即后续元素前移

    列表的切片操作的注意事项:
      对于步长不等于１的切片赋值，赋值运算符右侧的可迭代对象提供的
    元素个数，一定要等于切片切出的段数
    L = [1,2,3,4,5,6]
    L[::2] = 'ABC'  #对的
    L[::2] = 'abcde'#错的
    life is short ,i need python\
  
python中常用的序列函数;
   len(seq)   返回序列的长度
   max(x)     返回序列的最大元素(要求每两个元素都能比较大小)
   min (x)     返回序列的最小元素(要求每两个元素都能比较大小)
   sum(x)　　　　返回序列中的所有元素的和(要求所有元素都是数值类型)
   any(x)      真值测试，如果有一个值为真，则返回True
   all(x)      真值测试，如果有一个值为假,则返回False

序列相关的函数２
　　reversed(seq)   返回原序列的反向顺序的可迭代对象
  sorted(iterable,reverse = False)  返回可迭代对象中排序后的对象的列表

L = [5,9,7,1,3]
for x in reversed(L):
    print(x)
L2 = s


python3 中常用的列表方法(method)
　　详见：help(list)
 文档见：/home/tarena/下载/python_base_docs_html


深拷贝　和　浅拷贝　
　　1.不拷贝
　　　　L1 = [1,2,[3.1,3.2]]
       L2 = L1  #不拷贝：两个变量同时绑定在一个对象上
    2. 浅拷贝　shallow copy
    　　浅拷贝就是指在复制过程中，只复制一层变量，不会复制深层变量绑定的对象的复制过程
    示例:
当列表存在可变变量的时候，不能用浅考北
　深拷贝：　deep copy

深拷贝是指在复制过程中，复制所有变量及变量关联的深度
变量绑定的对象，占用的内存比较多

实现两个符对象玩去独立
思考：
　L2[2]:


列表和字符串比较：
　　列表和字符串都是序列，元素之间先后顺序关系
　　字符串是不可以改变的的序列，列表可变
　　字符串只能存储字符，列表可以
都是可迭代对象

字符串的文本解析方法　split splitlines join
 S.split(sep = None)  将字符串使用sep作用分隔符分割S字符串,
 返回分割之后的字符串列表，当不给定参数时，用空白符作为分隔符

 S.splitlines(sep=None)  将字符串以行为单位进行分割，形成
 　　　分割后的列表
 S.join(iterable) 用可迭代对象中的字符串，返回一个中间用
 　　　ｓ进行分隔的字符串

 示例：
 　s = 'Beijing is capital'
   L = s.split('')  L = ['Beijing','is','capital']

练习：
　有字符串"hello",生成字符串"h e l l o"和'h-e-l-l-o'

list comprehension
  列表推导式是用可迭代对象来创建列表的表达式
  作用：
  　　用简易的方法创建列表
  　语法：
  　　[表达式 for 变量 in 可迭代对象]
     或
     [表达式 for 变量　in 可迭代对象 if 真值表达式]

     函数调用也是表达
练习：　
　　用字符串“ABC”和字符串"123"生成如下列表：
　　




























