set = 集合(可变)
set()/set(iterable)
{1,2,3}
集合推导式{x for x in range(10)}


集合和固定集合运算:
   
   方法：
   　　s.add(x)
   s.remove(x)
   s.discard(x)
   s.pop(x)
   s.clear() 清除
   s.copy() 浅拷贝
   s.update(s2)
   ...

   函数　function 
     def 语句
       作用：
       　　封装语句块，把一些语句看成功能　整体
       语法：
       　def 函数名(形参列表):
           语句块
        return 语句
        　　作用：
        　　　结束当前函数的执行，返回到调用此函数的地方，同时返回一个对象的引用关系（默认返回None)
        语句
          return [表达式]
        函数调用：
        　　函数名(实际调用传参)

        ()的用法
        (1 + 2)分组子表达式
        (1,2,3)创建元组
        max(1,2,3)调用max函数



    return 语句


day09 笔记：
　　　python3 函数参数的传递：
　　　　　　　　　把数据给函数

　　　传递方式：
　　　　1.位置传参
　　　　　　序列传参(*序列)
　　　　２．关键字传参
　　　　　　　字典关键字传参(**字典)

位置传参
　　实际参数(实参)与形式参数(形参)的对应关系，是按位置来依次对应的
　示意：
　　def mymin(a,b,c)
         pass
   mymin(1,2,3)

说明：
　　实参和形参按位置进行匹配
　　实参的个数必须与形参个数相同

序列传参
　　序列传参是指在函数调用过程中，用星号（*)将列表拆解后按位置
　进行参数传递的方式
　　示例见：
　　　　sequence_give_args.py

关键字传参：
　　关键字传参
　　　　是指传参时，按着形参名字给形参赋值
　　　　实参和形参按名称进行分配

　示例见：
　　keyword_give_args.py

说明：
　　实参和形参按名字进行匹配，可以不按位置进行匹配
　　实参中的关键字要在形参中存在
　
字典关键字传参
　　是指是按为字典，将字典有两个星号(**)拆解后进行关键进行关键字传参的传递方式

　示例见：

说明：
　　１．字典和键名和形参名必须一致
　　　２．字典的键名必须是符合标识符命名规则的字符串
　　　３．字典的键名要在形参中存在

函数的综合传参：
　　１．函数的传参方式，在参数能唯一匹配到相应的实参的情况下可以任意组合
　　２．函数的位置传参要咸鱼关键字传参
　　　
函数的参数传递的过程：
　　示例１：
　　　
　#实参给形参进行赋值传递，并不会复制新的对象：
　　　即ｘ　，　和　ａ，同时引用１００，ｙ和ｂ同时引用２００
　
可变的数据类型作为函数的参数传递
　　示例见：　　
　　　a = [1,2,3]
     b = 4
     def f2(x,y):
       x.append(y)
f2(a,b)
print(a)
print(b)

----------------------以下讲函数的形参---------------------------

什么是函数的形参:

函数形参的定义的方式：
　　1.位置形参
   2.星号元组形参
        ３．命名关键字形参
        ４．双星号字典形参

   函数的缺省参数：
   　　语法：
   　　　　def 函数名(形参名1 = 默认实参1,形参名2　＝　默认实参2,...):
              语句块
        示例见：
        　　default_.py

        让调用更加方便，无需传入无关的实参

        说明：　
        　　缺省参数必须自右至左依次存在，如果一个参数有缺省值，则其右侧
        　的所有参数都必须有缺省参数，如：
        　　def error_from(a,b = 10,c):...是错误的
        　缺省参数可以有0个,１个或多个，甚至全部都有缺省参数
        示例见：　
          def fn(a = 0,b = 1,c=2):对的
          def fn(a=0,b,c=3) 错误
练习：
　　写一个函数　myadd,此函数可以计算两个数，三个数和四个数的和


def range(a,b = None,c = None)
    pass

星号元组形参：
　　语法：
　　　　def 函数名(*元组形参名)
   说明：
   　　元组形参名一般命名为'args'
    示例见：
    　　start_tuple_args.py

命名关键字形参：
　　　语法：
　　def 函数名(*,命名关键字形参1，命名关键字形参2,...):
        语句块
    或
     def 函数名(*args,命名关键字形参1,命名关键字形参2,...)
       语句块
    作用：
    　　强制所有的参数都必须用关键字传参或字典关键子传参传递
    示例见：
    　　named_keyword_args.py
    
双星号字典形参：
　　语法：
    　　def 函数名(**字典形参名):
           语句块
    　作用：　
    　　　收集多余的关键字传参
    说明：　
    　　字典形参名一般命名为'kwargs'
     一个函数内字典形参最多只能有一个
  示例见：　
  　　dict_kewword_args.py


函数的参数说明：
　位置形参，缺省参数，星号元组形参，双星号字典形参可以混合使用

函数参数自左向右的顺序为：

位置形参
星号元组形参
命名关键字形参
双星号字典形参

打包的就是多余的

可以接收任意的位置传参和关键字传参的形参列表
　　def fn(*args,**kwargs):
            print(args,kwargs)

全局变量和局部变量：
　　局部变量：
　　　　定义在函数内部的变量称为局部变量(函数的形参也是局部变量)
      局部变量只能在函数内部使用
      局部变量在函数调用时才能被创建，在函数调用后会自动销毁

    全局变量:globle variable
      定义在函数外部，模块内部的变量称为全局变量
      全局变量，所有函数都可以直接访问（函数内部不能将其赋值）

    练习：
    　　１．写一个函数 isprime(x) 判断x 是否是素数，如果为素数则返回
    　　　　True,否则返回False
       2.写一个函数prime_m2n(m,n)返回从m开始，到n结束(不包含n))范围内
       的素数，返回这些素数的列表，并打印
       如：
       　　L = prime_m2n(10,20)
        print(L) #[11,13,17,19]

       3.写一个函数primes(n),返回指定范围内n（不包含n）的全部素数的列表
       　　并打印这列素数的列表
       　　　　L
       4.改写之前的学生信息管理程序，将程序改为两个函数：
       　　def input_student():
             返回列表
           def output_student(L):
              打
         
          测试（实现与之前相同的功能）:
            infos = input_student()
            output_student(infos)




































































　



