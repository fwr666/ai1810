day11回顾
　　函数式编程
　　　推荐写小程序，用小程序构建大型程序
　　函数的可重入性
　　　　函数里如果没有使用除局部变量以外的变量则此函数必然为可重入函数
　　高阶函数：
　　map(func,*iterables)　　用多个可迭代对象生成一个可迭代对象
   filter(func,iterable) 过滤
   sorted(iterable,key=None,reverse=False)排序，返回排序后的列表
       Return a new list containing all items from the iterable in ascending order.
    
    A custom key function can be supplied to customise the sort order, and the
    reverse flag can be set to request the result in descending order.

递归：recursion
　　函数直接或间接的调用自身
  优点：
  　　把问题简单化
  缺点：
  　　受递归的层数限制

  闭包 closure
    特点：
    　　封闭外部嵌套函数中的变量，只让当前函数可见
    闭包创建函数（外部嵌套函数）中的变量会延长生命周期

day12笔记
　　装饰器：
　　　　decorator（专业提高篇）
   什么是装饰器：
   　　　装饰器是一个函数，主要是用来包装另一个函数或类。
    
    作用：
    　　在不修改被装饰函数的源代码，不改变被装饰函数的调用方式的情况下
    改变原函数的功能
  
  终极无敌，
  　　设计模式
  　　２３种模式中的一种

语法：
　　def 装饰器函数名(fn):
        语句块
       return 函数对象

    @装饰器函数名<换行>
    def 被装饰函数名(形参列表)
        语句块
    示例见
    　modeco1.py


    函数的文档字符串
    　　函数内第一次未赋值给任何变量的字符串是函数的文档字符串

    语法：
    　　def 函数名(参数列表):
           '函数的文档字符串'
            语句块
    示例：
    　　def myfunc(x,y,z):
            '''hghg'''

    函数定义的完整语法总结：
    　　def 语句语法：
    　　　　[@装饰器1]
           [@装饰器2]
           ...
           def 函数名([位置形参],[*元组形参],[命名关键字形参],[**字典形参]):
              '''文档字符串'''
              语句块
            []　可忽略

    模块:
      　Module
      什么是模块
      　模块是一个包含有一系列的数据，函数，类等组成的程序组
      　模块是一个文件，模块文件名通常以.py结果
      作用：
      　　1.让一些相类似的数据，函数，类等有逻辑的组织在一起，使逻辑结构
      　更加清晰
      　２．模块中的数据，函数和类可提供给其他模块或程序使用

      模块的分类：
      　１．内置模块，在解析器的内部可以直接使用
      　　２．标准库
      　３．第三方模块
      　４．自己写的模块 

      模块的导入　import 
      import 语句
      语法:
         import 模块1 [ai 模块新名1],...
        作用：
        　　将某模块整体导入到当前模块作用域内
        用法：
          模块名.属性名

模块属性的函数：
　　dir(object)函数，返回模块内所有属性的列表
　　help(obj) 函数,可以查看模块相关的文档字符串
   
练习：
　　






