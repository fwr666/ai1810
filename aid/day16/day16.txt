day15 回顾

 生成器：
 　动态提供数据的对象（现用现生成）

 生成器函数
 yield 表达式
 生成器表达式

 访问生成器的方式：　
 　　　迭代器
 　　　for in 

 迭代工具函数：
 　　zip(可迭代对象１，可迭代对象２.....)
 　　　enumerate(可迭代对象,start=0)

 字节：
 　　1字节(byte)=8位(bit)
 字节串：
 　　创建
 　　　字面值：
 　　　　b'hello'
    构造函数


day16笔记：
　　文件 File:
     什么是文件：

       文件是用于存储数据的单位,通常用于长期存储数据
       文件中的数据是以字节为单位进行顺序存储
        

文件的操作流程：
　　1.打开文件
　　　2.读／写文件
　　3.关闭文件 #清空缓冲区
　　注：
　　　　任何的操作系统，一个应用程序同时打开的个数有最大限制、　linux 最大1024  

文件的打开：
　open(filename,made='rt‘)　
 作用：
 　　打开一个文件

 参数：
 　　filename 文件的路径名　字符串（可以是绝对路径和相对路径）
  mode 打开模式
  　　'r'  只读
  　　'w'  只写
  　　’t‘   文本
  返回值：
  　　文件流对象
  　说明：　
  　　　打开文件出错时会触发OSError　类型的错误、
  文件的关闭系统：
  　　方法名：
  　　　f.close()


  文本文件读方式：
  　　F.read(n)#读取n个字符数据(文本方式)或字节数据(二进制)
      F.readline() #读取一行，以'\n'结束
      F.readlines()  读取多行，返回列表

  文本文件的写操作：
  　　方法名：　　
  　　　　f.write(字符串或字节串)
     作用:
        写入字符串（文本文件操作）或字节串（二进制文件操作）
      到文件中
      返回值：
      　　成功写入的字符个数或字节个数
      方法2:
        f.writelines(字符串或字节串列表)

      打开模式：
      　　'w' 只写并创建文件
      　　'x' 只写，只创建新文件，文件存在则报错
      　　　'a'　追加方式写文件
     文本文件操作：
     　　　说明：
     　　　　　１．对文本文件的读写要用字符串进行读写和写入数据
     　　　　　　２．默认文件中存储的都为字符串，在读写中会自动的
     　　　　进行编码转换
              3.以行为单文分隔,在python内部统一用'\n'作用
              为换符进行分隔
              各操作系统的换行符：
              　mac os x      /
               linux         '\n'
               windows       '\r\n'
  文件的迭代读取：
  　　　文件流对象是可迭代对象，迭代过程将以换行符
  　'\n'作为分隔符依次获取
  示例：
  　　f = open("myfile.txt")

  标准输入输出文件：
  　　模块：sys
    sys.stdin  标准输入文件（默认是键盘
    sys.stdout 标准输出文件（默认是终端输出
    sys.stderr   标准错误输出文件(默认是终端输出)

    ctrl + d 为输入文件结束符
    
    sys.stdin.read()
    
    二进制文件操作：
    　二进制文件模式字符：'b'
    什么是二进制文件操作：
    　　默认文件中存储的都是以字节(byte)为单位的数据，
    通常有人为的格式
    说明：
    　　对二进制文件的读写需要用字节串（bytes） 进行操作
    　F.seek 方法:
       作用设置文件的读写位置
       方法：
       　F.seek(偏移量,whence=相对位置)
       参数：
       　　偏移量：
       　　　　大于0的整数代表向文件末尾方向移动
       　　　小于０代表向文件头方向移动
       相对位置：
       　0 代表从文件头开始偏移
       　1 代表从当前位置开始偏移
       　2 代表从文件尾开始偏移
  F.flush 方法
    作用：
    　　清空（清倒）缓冲区

汉字编码：
　问题：
　　两种（常见）：
　　　　国标系列：
　　　　　GB18030(二字节或四字节编码)
           GBK(二字节编码，约21003个汉字))
            GB2312(二字节编码，约7千汉字)(A1A1~FEFE)
        (windows常用
      国际标准: UNICODE -----UTF-8
      　　　　　（Linux/unix/Mac OS X / IOS / Android）      

python 的编码（ｅｎｃｏｄｅ）字符串


编码注释：
　　在python原文件的第一行或第二行写入的如下内容是
编码注释的作用是告诉解释执行器当前的文件的编码类型是什么

如：
# -*- coding:gbk -*-