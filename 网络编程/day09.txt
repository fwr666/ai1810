

import signal
在父进程中运行
signal.signal(signal.SIGNAL，signal.SIG_IGN)
这样该父进程再退出则交由系统回收，函数非阻塞，
不会影响父进程

集成模块完成多进程多线程socket开发
import SocketServer

import socketserver
功能：通过模块提供的不同的类的组合完成多进程/多线程
tcp/udp的并发程序

使用步骤 1.

协程基础
定义：纤程，微线程。是为非抢占士多任务产生子程序的计算机程序
  组件。协程允许不同入口点在不同个位置暂停或者开始，简单来说
  协程就是可以暂停执行的函数。

*  yield即python实现协程的基本关键字
协程原理：记录一个函数的上下文栈区，协程调度时，将记录的上下文
 栈保存起来，在切换回来时进行调取，恢复原有的执行内容，从上 
  一次执行的位置继续执行。

  协程优点：
   1.可以同时处理多个任务
   2.协程是一个单线程程序，消耗资源很少
   3.协程无需进行切换的开销，也无需同步互斥操作

   缺点：
    1.无法利用计算机多核资源进行并行处理
    
    协程模块
    greenlet     
    greenlet.greenlet(finc)
    功能：创建协程对象
    参数：协程函数
    返回：协程对象

    g.switch()
    功能：选择要执行的协程函数

    gevent
    使用步骤;
        1.将协程事件封装为函数
	2.生成协程对象
	gevent.spawn(func,argv)
	功能：生成协程对象
	参数：func协程函数
	          argv不定参  给func按照位置传参
	返回值：协程对象
    3.协程回收
     gevent.joinall(list,[timeout])
     功能：阻塞等待回收协程
     参数：list 列表 放入要回收的协程对象
                  timeout  超时时间
   
       gevent.sleep():gevent阻塞，可以使协程跳转
          
	 特点：无论有多少协程运行，同一时刻只会运行一个
                    2.协程不会阻碍主进程的持续运行除非遇到gevent阻塞


IO
嵌入式  
玩?
c
c++
